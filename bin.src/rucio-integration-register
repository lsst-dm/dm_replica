#!/usr/bin/env python

import logging
import os
import sys

from lsst.daf.butler import Butler
from lsst.dm.rucio.register.app_parser import AppParser
from lsst.dm.rucio.register.rucio_interface import RucioInterface
from lsst.dm.rucio.register.rucio_register_config import RucioRegisterConfig

logger = logging.getLogger(__name__)

RUCIO_REGISTER_CONFIG = "RUCIO_REGISTER_CONFIG"
_MSG = "environment variable not set, and no configuration was specified on the command line"


def main():
    ap = AppParser(sys.argv)

    if RUCIO_REGISTER_CONFIG in os.environ:
        config_file = os.environ[RUCIO_REGISTER_CONFIG]
    elif ap.register_config is None:
        print("bailed")
        sys.exit(100)
    else:
        config_file = ap.register_config

    config = RucioRegisterConfig(config_file)

    rucio_rse = config.rucio_rse
    scope = config.scope
    rse_root = config.rse_root
    dtn_url = config.dtn_url

    butler = Butler(ap.butler_repo)

    ri = RucioInterface(
        butler=butler,
        rucio_rse=rucio_rse,
        scope=scope,
        rse_root=rse_root,
        dtn_url=dtn_url,
    )

    dataset_refs = butler.registry.queryDatasets(ap.dataset_type, collections=ap.collections)

    cnt = ri.register_as_replicas(ap.rucio_dataset, dataset_refs)
    if cnt == 0:
        print("no datasets to register")
        sys.exit(200)


if __name__ == "__main__":
    main()
